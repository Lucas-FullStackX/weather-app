{"version":3,"sources":["components/SearchBar.jsx","components/Nav.jsx","components/Card.jsx","components/Cards.jsx","components/About.jsx","components/Ciudad.jsx","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","onSearch","useState","city","setCity","onSubmit","e","preventDefault","type","placeholder","value","className","onChange","target","Nav","to","Card","min","max","name","img","onClose","id","onClick","src","width","height","alt","Cards","cities","length","map","c","About","Ciudad","celcius","temp","weather","wind","Math","round","latitud","longitud","k","console","log","URL","process","App","setCities","oldCities","filter","ciudad","fetch","then","r","json","recurso","find","i","undefined","main","temp_min","temp_max","icon","speed","clouds","all","coord","lat","lon","alert","path","render","component","exact","match","parseInt","params","Id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.741ff58a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./SB.css\";\r\n\r\nexport default function SearchBar({ onSearch }) {\r\n  const [city, setCity] = useState(\"\");\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        onSearch(city);\r\n      }}\r\n    >\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"City...\"\r\n        value={city}\r\n        className=\"bars\"\r\n        onChange={(e) => setCity(e.target.value)}\r\n      />\r\n      <input type=\"submit\" className=\"lens\" value=\"Search\" />\r\n    </form>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport SearchBar from \"./SearchBar.jsx\";\r\nimport \"./Nav.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { TiWeatherPartlySunny } from \"react-icons/ti\";\r\n\r\nfunction Nav({ onSearch }) {\r\n  return (\r\n    <nav className=\"navbar navbar-dark bg-dark\">\r\n      <Link to=\"/\" className=\"home\">\r\n        <TiWeatherPartlySunny />\r\n      </Link>\r\n      <Link className=\"about\" to=\"/about\">\r\n        <span>About</span>\r\n      </Link>\r\n      <SearchBar onSearch={onSearch} />\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport \"./Card.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Card({ min, max, name, img, onClose, id }) {\r\n  return (\r\n    <div className=\"card\">\r\n      <div id=\"closeIcon\" className=\"row\">\r\n        <button onClick={onClose} className=\"btn btn-sm btn-danger\">\r\n          X\r\n        </button>\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <Link to={`/ciudad/${id}`}>\r\n          <h5 className=\"card-title\">{name}</h5>\r\n        </Link>\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-4 col-md-4 col-lg-4\">\r\n            <p>Min</p>\r\n            <p>{min}°</p>\r\n          </div>\r\n          <div className=\"col-sm-4 col-md-4 col-lg-4\">\r\n            <p>Max</p>\r\n            <p>{max}°</p>\r\n          </div>\r\n          <div className=\"col-sm-4 col-md-4 col-lg-4\">\r\n            <img\r\n              className=\"iconoClima\"\r\n              src={`http://openweathermap.org/img/wn/${img}@2x.png`}\r\n              width=\"80\"\r\n              height=\"80\"\r\n              alt={name}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Cards.css\";\r\n\r\nimport Card from \"./Card.jsx\";\r\n\r\nexport default function Cards({ cities, onClose }) {\r\n  if (cities.length === 0) {\r\n    return <div className=\"any\">Check the weather of any city</div>;\r\n  }\r\n  return (\r\n    <div className=\"cards\">\r\n      {cities.map((c) => (\r\n        <Card\r\n          key={c.id}\r\n          id={c.id}\r\n          max={c.max}\r\n          min={c.min}\r\n          name={c.name}\r\n          img={c.img}\r\n          onClose={() => onClose(c.id)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./About.css\";\r\nexport default function About() {\r\n  return (\r\n    <div className=\"aboutContend\">\r\n      <h2>Weather App</h2>\r\n      <img\r\n        src=\"https://mir-s3-cdn-cf.behance.net/project_modules/disp/d58eb146152113.584973d61bdcf.gif\"\r\n        alt=\"gif\"\r\n      />\r\n      <p>\r\n        Hi, I'm Lucas Leguizamo, this is my first app made with React JS, here\r\n        you can check the weather and a couple of extra information.\r\n        <br />\r\n        If you liked me and want to see more of my projects, do not hesitate to\r\n        contact me\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Ciudad.css\";\r\n\r\nexport default function Ciudad({ city }) {\r\n  if (city) {\r\n    return (\r\n      <div className=\"ciudad\">\r\n        <h2>{city.name}</h2>\r\n        <img\r\n          className=\"iconoClima\"\r\n          src={`http://openweathermap.org/img/wn/${city.img}@2x.png`}\r\n          width=\"80\"\r\n          height=\"80\"\r\n          alt={city.name}\r\n        />\r\n        <span> {celcius(city.temp)} ºC</span>\r\n        <p>\r\n          <b>Weather:</b> {city.weather}\r\n        </p>\r\n        <p>\r\n          <b>Wind:</b> {city.wind} km/h\r\n        </p>\r\n        <p>\r\n          <b>Latitude:</b> {Math.round(city.latitud)}º\r\n        </p>\r\n        <p>\r\n          <b>Length:</b> {Math.round(city.longitud)}º\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n  return <div>No existe</div>;\r\n}\r\n\r\nfunction celcius(k) {\r\n  console.log(k);\r\n  return Math.round(k - 273.15);\r\n}\r\n","import React, { useState } from \"react\";\n\nimport { Route } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport Nav from \"./components/Nav.jsx\";\nimport Cards from \"./components/Cards.jsx\";\nimport About from \"./components/About.jsx\";\nimport Ciudad from \"./components/Ciudad.jsx\";\nconst apiKey = process.env.REACT_APP_KEY;\nconst URL = process.env.PUBLIC_URL;\nfunction App() {\n  const [cities, setCities] = useState([]);\n  function onClose(id) {\n    setCities((oldCities) => oldCities.filter((c) => c.id !== id));\n  }\n  function onSearch(ciudad) {\n    //Llamado a la API del clima\n    fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}`\n    )\n      .then((r) => r.json())\n      .then((recurso) => {\n        let city = cities.find((i) => i.name === recurso.name);\n        if (city) {\n          return;\n        }\n        if (recurso.main !== undefined) {\n          const ciudad = {\n            min: celcius(recurso.main.temp_min),\n            max: celcius(recurso.main.temp_max),\n            img: recurso.weather[0].icon,\n            id: recurso.id,\n            wind: recurso.wind.speed,\n            temp: recurso.main.temp,\n            name: recurso.name,\n            weather: recurso.weather[0].main,\n            clouds: recurso.clouds.all,\n            latitud: recurso.coord.lat,\n            longitud: recurso.coord.lon,\n          };\n          setCities((oldCities) => [...oldCities, ciudad]);\n        } else {\n          alert(\"Ciudad no encontrada\");\n        }\n      });\n  }\n  function celcius(k) {\n    console.log(k);\n    return Math.round(k - 273.15);\n  }\n  return (\n    <div className=\"App\">\n      <Route path={URL + \"/\"} render={() => <Nav onSearch={onSearch} />} />\n      <Route path={URL + \"/about\"} component={About} />\n      <Route\n        path=\"/\"\n        exact\n        render={() => <Cards cities={cities} onClose={onClose} />}\n      />\n      <Route\n        exact\n        path={URL + \"/ciudad/:Id\"}\n        render={({ match }) => (\n          <Ciudad\n            city={cities.filter((c) => c.id === parseInt(match.params.Id))[0]}\n          />\n        )}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}